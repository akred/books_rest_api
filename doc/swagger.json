{
    "openapi": "3.0.3",
    "info": {
        "title": "Books REST API",
        "description": "An API to manage books library",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/api/books": {
            "get": {
                "operationId": "getBookCollection",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "200": {
                        "description": "Book collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Book resources.",
                "description": "Retrieves the collection of Book resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postBookCollection",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "201": {
                        "description": "Book resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            }
                        },
                        "links": {
                            "GetBookItem": {
                                "operationId": "getBookItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/books/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Book resource.",
                "description": "Creates a Book resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Book resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/books/{id}": {
            "get": {
                "operationId": "getBookItem",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "200": {
                        "description": "Book resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Book resource.",
                "description": "Retrieves a Book resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putBookItem",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "200": {
                        "description": "Book resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book.jsonld-book.read"
                                }
                            }
                        },
                        "links": {
                            "GetBookItem": {
                                "operationId": "getBookItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/books/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Book resource.",
                "description": "Replaces the Book resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Book resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Book.jsonld-book.read"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteBookItem",
                "tags": [
                    "Book"
                ],
                "responses": {
                    "204": {
                        "description": "Book resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Book resource.",
                "description": "Removes the Book resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/libraries": {
            "get": {
                "operationId": "getLibraryCollection",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "Library collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Library resources.",
                "description": "Retrieves the collection of Library resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLibraryCollection",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "201": {
                        "description": "Library resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            }
                        },
                        "links": {
                            "GetLibraryItem": {
                                "operationId": "getLibraryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/libraries/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Library resource.",
                "description": "Creates a Library resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Library resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/libraries/{id}": {
            "get": {
                "operationId": "getLibraryItem",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "Library resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Library resource.",
                "description": "Retrieves a Library resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLibraryItem",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "Library resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld-library.read"
                                }
                            }
                        },
                        "links": {
                            "GetLibraryItem": {
                                "operationId": "getLibraryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/libraries/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Library resource.",
                "description": "Replaces the Library resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Library resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld-library.read"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLibraryItem",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "204": {
                        "description": "Library resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Library resource.",
                "description": "Removes the Library resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/api/users": {
            "post": {
                "operationId": "postUserCollection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "operationId": "getUserItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a User resource.",
                "description": "Creates a User resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new User resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/api/users/{id}": {
            "get": {
                "operationId": "getUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a User resource.",
                "description": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld-user.read"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "operationId": "getUserItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the User resource.",
                "description": "Replaces the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated User resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld-user.read"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "description": "User resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the User resource.",
                "description": "Removes the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "Book-book.read": {
                "type": "object",
                "description": "A book is attached to only one library.",
                "required": [
                    "title",
                    "author",
                    "summary"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-1-56619-909-4",
                        "description": "NOTE : it should be unique constraint\nBut for test purpose, and because it's hard to find one, let's keep it like this for tests :)",
                        "externalDocs": {
                            "url": "http://schema.org/isbn"
                        }
                    },
                    "library": {
                        "type": "Library",
                        "example": "api/libraries/1",
                        "format": "iri-reference"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Book-book.write": {
                "type": "object",
                "description": "A book is attached to only one library.",
                "required": [
                    "title",
                    "author",
                    "summary"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-1-56619-909-4",
                        "description": "NOTE : it should be unique constraint\nBut for test purpose, and because it's hard to find one, let's keep it like this for tests :)",
                        "externalDocs": {
                            "url": "http://schema.org/isbn"
                        }
                    },
                    "library": {
                        "type": "Library",
                        "example": "api/libraries/1",
                        "format": "iri-reference"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "Book-library.read": {
                "type": "object",
                "description": "A book is attached to only one library.",
                "required": [
                    "title",
                    "author",
                    "summary"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-1-56619-909-4",
                        "description": "NOTE : it should be unique constraint\nBut for test purpose, and because it's hard to find one, let's keep it like this for tests :)",
                        "externalDocs": {
                            "url": "http://schema.org/isbn"
                        }
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Book.jsonld-book.read": {
                "type": "object",
                "description": "A book is attached to only one library.",
                "required": [
                    "title",
                    "author",
                    "summary"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-1-56619-909-4",
                        "description": "NOTE : it should be unique constraint\nBut for test purpose, and because it's hard to find one, let's keep it like this for tests :)",
                        "externalDocs": {
                            "url": "http://schema.org/isbn"
                        }
                    },
                    "library": {
                        "type": "Library",
                        "example": "api/libraries/1",
                        "format": "iri-reference"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Book.jsonld-book.write": {
                "type": "object",
                "description": "A book is attached to only one library.",
                "required": [
                    "title",
                    "author",
                    "summary"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-1-56619-909-4",
                        "description": "NOTE : it should be unique constraint\nBut for test purpose, and because it's hard to find one, let's keep it like this for tests :)",
                        "externalDocs": {
                            "url": "http://schema.org/isbn"
                        }
                    },
                    "library": {
                        "type": "Library",
                        "example": "api/libraries/1",
                        "format": "iri-reference"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "Book.jsonld-library.read": {
                "type": "object",
                "description": "A book is attached to only one library.",
                "required": [
                    "title",
                    "author",
                    "summary"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-1-56619-909-4",
                        "description": "NOTE : it should be unique constraint\nBut for test purpose, and because it's hard to find one, let's keep it like this for tests :)",
                        "externalDocs": {
                            "url": "http://schema.org/isbn"
                        }
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Library-library.read": {
                "type": "object",
                "description": "A library contains one or many books.",
                "required": [
                    "category"
                ],
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "books": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Book-library.read"
                        }
                    }
                }
            },
            "Library-library.write": {
                "type": "object",
                "description": "A library contains one or many books.",
                "required": [
                    "category"
                ],
                "properties": {
                    "category": {
                        "type": "string"
                    }
                }
            },
            "Library.jsonld-library.read": {
                "type": "object",
                "description": "A library contains one or many books.",
                "required": [
                    "category"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "books": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Book.jsonld-library.read"
                        }
                    }
                }
            },
            "Library.jsonld-library.write": {
                "type": "object",
                "description": "A library contains one or many books.",
                "required": [
                    "category"
                ],
                "properties": {
                    "category": {
                        "type": "string"
                    }
                }
            },
            "User-user.read": {
                "type": "object",
                "description": "User can borrow 0 or many books",
                "required": [
                    "username",
                    "firstname",
                    "lastname"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "User-user.write": {
                "type": "object",
                "description": "User can borrow 0 or many books",
                "required": [
                    "username",
                    "firstname",
                    "lastname"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    }
                }
            },
            "User.jsonld-user.read": {
                "type": "object",
                "description": "User can borrow 0 or many books",
                "required": [
                    "username",
                    "firstname",
                    "lastname"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "User.jsonld-user.write": {
                "type": "object",
                "description": "User can borrow 0 or many books",
                "required": [
                    "username",
                    "firstname",
                    "lastname"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "description": "Value for the Authorization header parameter.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "tags": []
}